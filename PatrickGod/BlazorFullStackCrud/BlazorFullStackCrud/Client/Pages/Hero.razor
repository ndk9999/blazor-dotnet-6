@page "/hero"
@page "/hero/{id:int}"
@inject ISuperHeroService SuperHeroService

@if (Id == null)
{
    <PageTitle>Create a new super hero</PageTitle>
    <h3>Create a new super hero</h3>
}
else
{
    <PageTitle>Edit @hero.HeroName</PageTitle>
    <h3>Edit @hero.HeroName</h3>
}

<EditForm Model="hero" OnSubmit="HandleSubmit">
    <div>
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="HeroName">Hero Name</label>
        <InputText id="HeroName" @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div>
        <label>Comic</label><br />
        <InputSelect @bind-Value="hero.ComicId" class="form-control">
            @foreach (var comic in SuperHeroService.Comics)
            {
                <option value="@comic.Id">@comic.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@SubmitButtonText</button>

    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteHero">Delete Hero</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id {get; set;}

    private string SubmitButtonText = string.Empty;

    private SuperHero hero = new SuperHero()
    {
        Comic = new Comic()
    };

    protected override async Task OnInitializedAsync()
    {
        SubmitButtonText = Id == null ? "Save New Hero" : "Update Hero";
        await SuperHeroService.GetComicsAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            hero.Comic = SuperHeroService.Comics[0];
            hero.ComicId = hero.Comic.Id;
        }
        else
        {
            hero = await SuperHeroService.GetHeroAsync(Id.Value);
        }
    }

    private async Task HandleSubmit()
    {
        if (Id == null)
        {
            await SuperHeroService.CreateHero(hero);
        }
        else
        {
            await SuperHeroService.UpdateHero(hero);
        }
    }

    private async Task DeleteHero()
    {
        await SuperHeroService.DeleteHero(hero.Id);
    }
}
