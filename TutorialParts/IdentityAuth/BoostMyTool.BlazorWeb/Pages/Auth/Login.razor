@page "/login"
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navManager

<div class="mx-auto rounded border p-4" style="width: 400px; margin: 60px;">
	<h3 class="text-center mb-3">Login</h3>

	<hr />

	@if (!string.IsNullOrWhiteSpace(errorMessage))
	{
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			<strong>@errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
			</button>
		</div>
	}

	<div class="mb-3">
		<label class="form-label">Email</label>
		<input type="email" class="form-control" @bind="email" />
	</div>

	<div class="mb-3">
		<label class="form-label">Password</label>
		<input type="password" class="form-control" @bind="password" />
	</div>
	
	<div class="row">
		<div class="col d-grid">
			<button type="submit" class="btn btn-primary" @onclick="SubmitLoginForm">Login</button>
		</div>
		
		<div class="col d-grid">
			<a href="/" class="btn btn-outline-primary" role="button">
				Cancel
			</a>
		</div>
	</div>
</div>

@code {
	private string email = string.Empty;

	private string password = string.Empty;

	private string errorMessage = string.Empty;


	private async Task SubmitLoginForm()
	{
		errorMessage = string.Empty;

		if (string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(password))
		{
			errorMessage = "Email and password are required.";
			return;
		}

		var provider = authProvider as CustomAuthStateProvider;
		var result = await provider.LoginAsync(email, password);

		if (result.Success)
		{
			navManager.NavigateTo("/");
		}
		else
		{
			errorMessage = "Invalid email or password.";
		}
	}
}
